---
openapi: 3.0.0
info:
  title: Swagger Validator Badge
  description: Validate a 2.0 , 3.0.X specification format
  version: 1.0.0
servers:
- url: "/"
paths:
  "/validate":
    get:
      tags:
      - Validator
      summary: Validates a swagger definition
      description: |
        Validates the supplied payload to a 2.x or 3.0 specification
        based on a `url` parameter
      operationId: validateByUrl
      parameters:
      - name: url
        in: query
        description: A URL to the definition
        required: true
        schema:
          type: string
      responses:
        '200':
          description: 'successfully validated schema'
          content:
            "image/png":
              schema:
                $ref: '#/components/schemas/ImageResponseModel'
            "application/json":
              schema:
                $ref: '#/components/schemas/SimpleResponseModel'
        '400':
          description: 'invalid input schema'
          content:
            "image/png":
              schema:
                $ref: '#/components/schemas/ImageResponseModel'
            "application/json":
              schema:
                $ref: '#/components/schemas/SimpleResponseModel'
    post:
      tags:
      - Validator
      summary: Validate a 2.x or 3.0.0 definition
      description: |
        Validates the supplied payload of 2.x or 3.0 specification
        based on an input specification
      operationId: validateByContent
      requestBody:
        description: the specification to validate
        content:
          "application/json":
            schema:
              $ref: '#/components/schemas/RequestModel'
          "application/yaml":
            schema:
              $ref: '#/components/schemas/RequestModel'
        required: true
      responses:
        '200':
          description: successfully validated schema
          content:
            "image/png":
              schema:
                $ref: '#/components/schemas/ImageResponseModel'
            "application/json":
              schema:
                $ref: '#/components/schemas/SimpleResponseModel'
        '400':
          description: 'invalid input schema, or could not be validated'
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/SimpleResponseModel'
  "/debug":
      get:
        tags:
        - Validator
        summary: Validates a swagger definition
        description: |
          Validates the supplied payload to a 2.x or 3.0 specification
          based on a `url` parameter
        operationId: reviewByUrl
        parameters:
        - name: url
          in: query
          description: A URL to the definition
          required: true
          schema:
            type: string
        responses:
          '200':
            description: successfully validated schema
            content:
              "application/json":
                schema:
                  $ref: '#/components/schemas/FullResponseModel'
          '400':
            description: 'invalid input schema, or could not be validated'
            content:
              "application/json":
                schema:
                  $ref: '#/components/schemas/FullResponseModel'
      post:
        tags:
        - Validator
        summary: Validate a 2.x or 3.0.0 definition
        description: |
          Validates the supplied payload of 2.x or 3.0 specification
          based on an input specification
        operationId: reviewByContent
        requestBody:
          description: the specification to validate
          content:
            "application/json":
              schema:
                $ref: '#/components/schemas/RequestModel'
            "application/yaml":
              schema:
                $ref: '#/components/schemas/RequestModel'
          required: true
        responses:
          '200':
            description: successfully validated schema
            content:
              "application/json":
                schema:
                  $ref: '#/components/schemas/FullResponseModel'
          '400':
            description: 'invalid input schema, or could not be validated'
            content:
              "application/json":
                schema:
                  $ref: '#/components/schemas/FullResponseModel'

components:
  schemas:
    MessagesModel:
      type: array
      description: Messages
      items:
        type: string
    SimpleResponseModel:
      type: object
      properties:
        result:
          type: string
          description: the validation result
          enum:
            - valid
            - invalid
            - error
            - upgrade
    FullResponseModel:
      type: object
      properties:
        valid:
          type: boolean
        messages:
          $ref: '#/components/schemas/MessagesModel'
    ImageResponseModel:
      type: string
      format: binary
    RequestModel:
      type: object